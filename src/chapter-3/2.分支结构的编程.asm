################################################################
#######################第二题 分支结构的编程########################
# 计算C语言表达式: if (x>y) z=x+5; else z=y-5。
## 其中z存放在寄存器a1中，x、y存放的寄存器不限。
#### 快点写完去复习啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊
##### 来不及啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊
################################################################

################数据段###################
.data
# 变量定义
x:  .word 0
y:  .word 0
z:  .word 0
# 输出信息
startMsg:  .string "计算C语言表达式if (x>y) z=x+5; else z=y-5"
inputxMsg: .string "\n请输入x："
inputyMsg: .string "请输入y："
resultMsg: .string "\nz为："


################代码段###################
.text
#######输入x,y#######
input:
	# --------------输出startMsg--------------
	la a0,startMsg		# 将字符串startMsg首址放入a0
	li a7,4			# 功能号放入a7，4号表示字符串的输出
	ecall			# 系统调用

	# --------------输出inputxMsg--------------
	la a0,inputxMsg		# 将字符串InputaMsg首址放入a0
	li a7,4     		# 功能号放入a7，4号表示字符串的输出 
	ecall			# 系统调用

	# --------------输入x--------------
	li a7,5			# 功能号放入a7，5号表示输入一个整数到a0
	ecall			# 系统调用
	sw a0,x,t1		# 借助t1储存x变量的地址，然后将a0赋值给x（伪指令）

	# --------------输出inputyMsg--------------
	la a0,inputyMsg		# 将字符串InputbMsg首址放入a0
	li a7,4     		# 功能号放入a7，4号表示字符串的输出
	ecall			# 系统调用

	# --------------输入y--------------
	li a7,5			# 功能号放入a7，5号表示输入一个整数到a0
	ecall			# 系统调用
	sw a0,y,t1		# 借助t1储存x变量的地址，然后将a0赋值给y(伪指令)

	# --------------输出resultMsg--------------
	la a0,resultMsg		# 将字符串resultMsg首址放入a0
	li a7,4     		# 功能号放入a7，4号表示字符串的输出
	ecall
	
main:
	lw a2,x			# 将寄存器a0值放入变量x
	lw a3,y			# 将寄存器a0值放入变量y

#######计算if(x>y)表达式#######
calculate:
	# ---------将变量x,y的值读取到寄存器a2，a3中------
	lw a2,x			# 将x值放入寄存器a2
	lw a3,y			# 将y值放入寄存器a3

	bgt a2,a3,Yes		# a2>a3?,即x>y?
	j No			# 上述条件不成立，跳转执行No:
 
 Yes:	# x>y时执行
	 addi a1,a2,5		# z=x+5
	 sw a1,z,t1		# load adress t1,z     save word a0,(t1)(伪指令) 
	 j exit			# 表达式计算完毕，跳转到exit:
 No:	# x<y时执行
	 addi a1,a3,-5		# z=y-5
 	 sw a1,z,t1		# load adress t1,z     save word a0,(t1)(伪指令) 

	 
#######输出结果#######
exit:
	 lw a0,z		# 将z的值放入寄存器a0
	 li a7,1		# 功能号放入a7，1号表示整数的输出
	 ecall			# 系统调用
	 li a7,10		# 系统调用,功能号为10。功能： 结束退出，即exit
	 ecall           	# 系统调用命令
